{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11thHr\\\\Desktop\\\\Software Engineering\\\\SoftwareProject-Final\\\\software\\\\src\\\\components\\\\MidSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MidSection.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MidSection() {\n  _s();\n  const [accepted, setAccepted] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/accepted') // Fetch from the correct endpoint\n    .then(response => response.json()).then(data => setAccepted(data)).catch(error => console.error('Error fetching accepted users:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"approved-users\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Approved Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), accepted.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MidSection, \"XcYm7MzjRzl/nJ/T9FQp3ZJdSqM=\");\n_c = MidSection;\nexport default MidSection;\nvar _c;\n$RefreshReg$(_c, \"MidSection\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","MidSection","_s","accepted","setAccepted","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","user","index","name","date","_c","$RefreshReg$"],"sources":["C:/Users/11thHr/Desktop/Software Engineering/SoftwareProject-Final/software/src/components/MidSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MidSection.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MidSection() {\r\n  const [accepted, setAccepted] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/accepted') // Fetch from the correct endpoint\r\n      .then(response => response.json())\r\n      .then(data => setAccepted(data))\r\n      .catch(error => console.error('Error fetching accepted users:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Dashboard</h1>\r\n      <div className=\"dashboard\">\r\n        <div className=\"approved-users\">\r\n          <ul>\r\n            <li><h2>Approved Users</h2></li>\r\n            {accepted.map((user, index) => (\r\n              <li key={index}>\r\n                <span>{user.name}</span>\r\n                {/* Assuming you want to display the date, ensure it's properly formatted */}\r\n                <span>{user.date}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MidSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAAA,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAL,QAAA,eACxBf,OAAA;QAAKoB,SAAS,EAAC,gBAAgB;QAAAL,QAAA,eAC7Bf,OAAA;UAAAe,QAAA,gBACEf,OAAA;YAAAe,QAAA,eAAIf,OAAA;cAAAe,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/Bd,QAAQ,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBvB,OAAA;YAAAe,QAAA,gBACEf,OAAA;cAAAe,QAAA,EAAOO,IAAI,CAACE;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAExBnB,OAAA;cAAAe,QAAA,EAAOO,IAAI,CAACG;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAHjBI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACf,EAAA,CA7BQD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}