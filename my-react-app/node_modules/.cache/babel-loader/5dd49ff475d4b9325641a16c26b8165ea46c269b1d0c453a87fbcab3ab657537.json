{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafid\\\\Desktop\\\\Software\\\\my-react-app\\\\src\\\\ContactPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactPage = () => {\n  _s();\n  const [subject, setSubject] = useState(\"\");\n  const [mainText, setMainText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"/submit_data\", {\n        subject,\n        mainText\n      });\n      console.log(response.data);\n      // Optionally, you can reset the form fields after successful submission\n      setSubject(\"\");\n      setMainText(\"\");\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n      setError(\"Failed to submit message. Please try again later.\");\n    }\n  };\n  const handleClearText = () => {\n    setSubject(\"\");\n    setMainText(\"\");\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"subject\",\n        value: subject,\n        onChange: e => setSubject(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        value: mainText,\n        onChange: e => setMainText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClearText,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactPage, \"kw+QMTvsk7abFkVt4dq+YIdIF/w=\");\n_c = ContactPage;\nexport default ContactPage;\nvar _c;\n$RefreshReg$(_c, \"ContactPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ContactPage","_s","subject","setSubject","mainText","setMainText","error","setError","handleSubmit","e","preventDefault","response","post","console","log","data","handleClearText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rafid/Desktop/Software/my-react-app/src/ContactPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ContactPage = () => {\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [mainText, setMainText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"/submit_data\", { subject, mainText });\r\n      console.log(response.data);\r\n      // Optionally, you can reset the form fields after successful submission\r\n      setSubject(\"\");\r\n      setMainText(\"\");\r\n      setError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error);\r\n      setError(\"Failed to submit message. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  const handleClearText = () => {\r\n    setSubject(\"\");\r\n    setMainText(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contact Us</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"subject\">Subject:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"subject\"\r\n          value={subject}\r\n          onChange={(e) => setSubject(e.target.value)}\r\n        />\r\n        <label htmlFor=\"message\">Message:</label>\r\n        <textarea\r\n          id=\"message\"\r\n          value={mainText}\r\n          onChange={(e) => setMainText(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" onClick={handleClearText}>Clear</button>\r\n        {error && <p>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}